# Based on
# https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-docker-images#publishing-images-to-github-packages

name: Build Docker Image

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Disk Cleanup
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
          docker system prune -a -f
          docker builder prune -a -f
          df -h

      - name: Checkout repository with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=sha,format=short

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Check Disk Usage
        run: |
          docker image ls
          df -h

      # Build Chromium
      - name: Build Chromium
        uses: docker/build-push-action@v5
        with:
          context: .
          target: chromium-install
          tags: chromium-install
          cache-from: type=gha,scope=chromium
          cache-to: type=gha,mode=min,scope=chromium
      - run: |
          docker buildx prune --all --force
          docker image ls
          df -h

      # Build Firefox
      - name: Build Firefox
        uses: docker/build-push-action@v5
        with:
          context: .
          target: firefox-install
          tags: firefox-install
          cache-from: type=gha,scope=firefox
          cache-to: type=gha,mode=min,scope=firefox
      - run: |
          docker buildx prune --all --force
          docker image ls
          df -h

      # Build OpenSSL
      - name: Build OpenSSL
        uses: docker/build-push-action@v5
        with:
          context: .
          target: openssl-install
          tags: openssl-install
          cache-from: type=gha,scope=openssl
          cache-to: type=gha,mode=min,scope=openssl
      - run: |
          docker buildx prune --all --force
          docker image ls
          df -h

      # Build ARMOR
      - name: Build ARMOR
        uses: docker/build-push-action@v5
        with:
          context: .
          target: armor-install
          tags: armor-install
          cache-from: type=gha,scope=armor
          cache-to: type=gha,mode=min,scope=armor
      - run: |
          docker buildx prune --all --force
          docker image ls
          df -h

      # Build CERES
      - name: Build CERES
        uses: docker/build-push-action@v5
        with:
          context: .
          target: ceres-install
          tags: ceres-install
          cache-from: type=gha,scope=ceres
          cache-to: type=gha,mode=min,scope=ceres
      - run: |
          docker buildx prune --all --force
          docker image ls
          df -h

      # Build Hammurabi
      - name: Build Hammurabi
        uses: docker/build-push-action@v5
        with:
          context: .
          target: hammurabi-install
          tags: hammurabi-install
          cache-from: type=gha,scope=hammurabi
          cache-to: type=gha,mode=min,scope=hammurabi
      - run: |
          docker buildx prune --all --force
          docker image ls
          df -h

      # Build Verdict
      - name: Build Verdict
        uses: docker/build-push-action@v5
        with:
          context: .
          target: verdict-install
          tags: verdict-install
          cache-from: type=gha,scope=verdict
          cache-to: type=gha,mode=min,scope=verdict
      - run: |
          docker buildx prune --all --force
          docker image ls
          df -h

      # Build the final image and push to registry
      # Don't cache the final image since it is too large
      - name: Build final Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          target: final
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
          cache-from: |
            type=gha,scope=chromium
            type=gha,scope=firefox
            type=gha,scope=openssl
            type=gha,scope=armor
            type=gha,scope=ceres
            type=gha,scope=hammurabi
            type=gha,scope=verdict

  # Finally, do some sanity checks
  test:
    name: Sanity Checks
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests
        run: |
          TAG=$(echo "${{ needs.build.outputs.image-tag }}" | head -n1)
          docker pull $TAG
          docker run --rm --init --cap-add=NET_ADMIN \
            -v ${{ github.workspace }}/ref-results:/verdict-bench/ref-results \
            $TAG make test compare-ref
